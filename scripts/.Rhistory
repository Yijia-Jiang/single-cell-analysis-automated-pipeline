library(GenomicRanges)
library(JASPAR2020)
library(TFBSTools)
library(patchwork)
library(BSgenome.Hsapiens.UCSC.hg38)
library(stringr)
library(Seurat)
library(ggplot2)
# library(tidyverse)
library(stringi)
library(stringr)
signatures <- read.csv("/Users/jiang/Dropbox (Partners HealthCare)/CFCE_Collaboration_Labs/20230823_fixed_scRNA_11278/analysis/Merge_RNA_BRA/breast_markers.csv")
signatures
library(reshape2)
signatures <- stack(signatures)
head(signatures)
colnames(signatures) <- c("genes", "celltype")
signatures <-signatures %>% select("celltype",  "genes"  )
save(signatures, file = "signatures.Rdata")
# write.csv(df.sig, "breast_signatures.csv", row.names = F)
load("signatures.Rdata")
signatures <- signatures
as.character(signatures)
head(signatures)
signatures
# signatures <- read.csv("breast_signatures.csv")
head(signatures)
celltypes <- as.character(unique(signatures[,1]))
signature_list <- sapply(1:length(celltypes),function(x){
return((list(signatures[which(signatures[,1]==celltypes[x]),2])))})
names(signature_list) <- celltypes
signature_list
res2 <- c(
res2,
make.tabs(samplename = i,
images = c(file.path(single_path , i, paste0(i, '_QC_plot_before_original.png')),
file.path(single_path , i, paste0(i, "_QC_plot_after_original.png")),
file.path(single_path , i, paste0(i, "_UMAP_by_cluster_number_original.png")),
file.path(single_path , i, paste0(i, "_UMAP_by_celltype_markerbased.png")),
file.path(single_path , i, paste0(i, "_DEG_heatmap_assign.ident.png")),
file.path(single_path , i, paste0(i, "_UMAP_feature_plot_breast_markers.png"))
),
titles = c("QC metrics of cells before QC filtering",
"QC metrics of cells after QC filtering",
"UMAP Clustering by cluster numbers",
"Celltype annotation based on CIBERSORT markers",
"Heatmap of GEX",
"Gene expression levels of Markers"
))
)
# Function to create multiple tabs
# https://stackoverflow.com/questions/46877451/generating-tabs-in-r-markdown-with-a-loop
single_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scrna_20240322/analysis/single_sample"
integrate_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scrna_20240322/analysis/integration"
single_sample_names <- list.files(single_path)
make.tabs <- function(samplename, images, titles){
res <- NULL
res <- c(res, '#### ', samplename, '\n')
for(i in seq_along(images)){
res <- c(res,
"```{r, echo=FALSE, fig.cap='", titles[i], "', out.width = '60%', fig.topcaption=TRUE}", '\n',
"knitr::include_graphics('", images[i], "')", '\n',
'```', '\n\n')
}
return(res)
}
make.df <- function(samplename, dfs){
library(tidyverse)
res <- NULL
for(i in seq_along(dfs)){
summary<-read.csv(df, row.names = 1)
summary<-as.data.frame((summary))
res <- c(res,
"```{r, echo=FALSE, fig.cap='", titles[i], "', out.width = '60%'}", '\n',
"print(summary %>% head(5))", '\n',
'```', '\n\n')
}
# return(res)
}
# make.tabs.all <- function()
res2 <- NULL
# Create the Rmd to knit
res2 <- c(res2,
'---
title: "single-cell pipeline"
output: html_document
---
## scRNA-seq data
### Result {.tabset}
```{r}
# library(dplyr)
```
')
for (i in c('BA-1_209_NormR',"BI54")){
res2 <- c(
res2,
make.tabs(samplename = i,
images = c(file.path(single_path , i, paste0(i, '_QC_plot_before_original.png')),
file.path(single_path , i, paste0(i, "_QC_plot_after_original.png")),
file.path(single_path , i, paste0(i, "_UMAP_by_cluster_number_original.png")),
file.path(single_path , i, paste0(i, "_UMAP_by_celltype_markerbased.png")),
file.path(single_path , i, paste0(i, "_DEG_heatmap_assign.ident.png")),
file.path(single_path , i, paste0(i, "_UMAP_feature_plot_breast_markers.png"))
),
titles = c("QC metrics of cells before QC filtering",
"QC metrics of cells after QC filtering",
"UMAP Clustering by cluster numbers",
"Celltype annotation based on CIBERSORT markers",
"Heatmap of GEX",
"Gene expression levels of Markers"
))
)
# make.df(samplename = i,
#         df = c(file.path(single_path , i, paste0(i, '_DEG_diffgene_per_cluster.csv')))
# )
}
for (i in c("merge_all")){
res2 <- c(
res2,
make.tabs(samplename = i,
images = c(file.path(integrate_path , i, paste0(i, '_UMAP_by_sample_before_integration.png')),
file.path(integrate_path , i, paste0(i, "_UMAP_by_sample_after_integration.png")),
file.path(integrate_path , i, paste0(i, "_UMAP_by_cluster_after_integration.pdf")),
file.path(integrate_path , i, paste0(i, "_UMAP_by_celltype_markerbased.png")),
file.path(integrate_path , i, paste0(i, "_DEG_heatmap_assign.ident.png")),
file.path(integrate_path , i, paste0(i, "_UMAP_feature_plot_breast_markers.png")),
file.path(integrate_path , i, "GSEA", "merge_all_per_cluster", paste0(i, "_per_cluster 1_HALLMARK_terms.png"))
),
titles = c("Before Integration",
"After Integration",
"UMAP Clustering",
"Celltype annotation",
"Heatmap",
"Markers",
"GSEA_hallmark_cluster"
))
)
}
res2 <- cat(res2,
sep = "",
file = "test_file_summary.Rmd")
# Render the Rmd created into html here
rmarkdown::render("test_file_summary.Rmd")
library(Signac)
library(Seurat)
library(SeuratWrappers)
library(GenomeInfoDb)
library(EnsDb.Hsapiens.v86) #---GRCh38 (hg38)
# library(ggploT1)
library(patchwork)
set.seed(101)
library(future)
library(tidyverse)
# plan("multiprocess", workers = 4)
options(future.globals.maxSize = 50000 * 1024^2) #50G
library(GenomicRanges)
# Create the Rmd to knit
res2 <- c(res2,
'---
title: "single-cell pipeline"
author: "author"
output: html_document
---
## Some Tabs
### Result {.tabset}
```{r}
# library(dplyr)
```
',
make.tabs(samplename = i, images = c('/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scrna_20240322/analysis/BA-1_209_NormR_QC_plot_before_original.png',
"/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scrna_20240322/analysis/BA-1_209_NormR_QC_plot_after_original.png"),
titles=c("QC before", "QC after")))
# Function to create multiple tabs
# https://stackoverflow.com/questions/46877451/generating-tabs-in-r-markdown-with-a-loop
make.tabs <- function(samplename, images, titles){
res <- NULL
res <- c(res, '#### ', samplename, '\n')
for(i in seq_along(images)){
# res <- c(res, '#### ', title, '\n',
#          "```{r, echo=FALSE, fig.cap='QC after filtering', out.width = '50%'}", '\n',
#          "knitr::include_graphics('", images[i], "')", '\n',
#          '```', '\n\n')
res <- c(res,
"```{r, echo=FALSE, fig.cap='", titles[i], "', out.width = '50%'}", '\n',
"knitr::include_graphics('", images[i], "')", '\n',
'```', '\n\n')
}
return(res)
}
# make.tabs.all <- function()
for (i in c('BA-1_209_NormR',"BI54")){
res2 <- NULL
# Create the Rmd to knit
res2 <- c(res2,
'---
title: "single-cell pipeline"
author: "author"
output: html_document
---
## Some Tabs
### Result {.tabset}
```{r}
# library(dplyr)
```
',
make.tabs(samplename = i, images = c('/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scrna_20240322/analysis/BA-1_209_NormR_QC_plot_before_original.png',
"/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scrna_20240322/analysis/BA-1_209_NormR_QC_plot_after_original.png"),
titles=c("QC before", "QC after")))
res2 <- cat(res2,
# make.tabs(title = c('BA-1_209_NormR'), image = c('/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scrna_20240322/analysis/BA-1_209_NormR_QC_plot_after_original.png')),
sep = "",
file = "filetoknit.Rmd")
}
# Render the Rmd created into html here
rmarkdown::render("filetoknit.Rmd")
suppressMessages(library(tidyverse))
suppressMessages(library(magrittr))
suppressMessages(library(ggplot2))
suppressMessages(library(RColorBrewer))
sample_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/merge_1_final_metadata.csv"
data <- read.csv(sample_path)
col2 <- colorRampPalette(brewer.pal(9,"Paired"))
data
data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% as.data.frame()
head(data)
unique(data$orig.ident)
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% as.data.frame()
stat1.T
melt(stat1)
stat1
subjmeans <- cast(stat1, orig.ident~assign.ident.breast, count)
library(reshape)
cast(stat1, orig.ident~assign.ident.breast, count)
subjmeans <- cast(stat1, orig.ident~assign.ident.breast, mean)
subjmeans <- cast(stat1, orig.ident~assign.ident.breast, mean)
cast(stat1, orig.ident~assign.ident.breast, mean)
data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = count / sum(count)) %>% as.data.frame()
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = count / sum(count)) %>% as.data.frame()
cast(stat1, orig.ident~assign.ident.breast, value = "freq")
data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n())
78/(78+136+213+624+541+25+19+777)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq")
stat1
group_by(orig.ident) %>%
summarise(count = n())
data %>% group_by(orig.ident) %>%
summarise(count = n())
head(data)
data %>% group_by(orig.ident) %>%
summarise(median_nCount_RNA = mean(nCount_RNA))
data %>% group_by(orig.ident) %>%
summarise(median_nCount_RNA = median(nCount_RNA))
data %>% group_by(orig.ident) %>%
summarise(median_genes_per_cell = median(nFeature_RNA))
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = count / sum(count)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat1
stat2 <- data %>% group_by(orig.ident) %>%
summarise(count = n()) %>% as.data.frame()
stat3 <- data %>% group_by(orig.ident) %>%
summarise(median_genes_per_cell = median(nFeature_RNA)) %>% as.data.frame()
cbind(stat2, stat3)
merge(x = stat2, y = stat3, by = "orig.ident", all.x = TRUE)
df1 <- merge(x = stat2, y = stat3, by = "orig.ident", all.x = TRUE)
df2 <- merge(x = df1, y = stat1, by = "orig.ident", all.x = TRUE)
df2
assign.ident.breast
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = count / sum(count)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat2 <- data %>% group_by(orig.ident) %>%
summarise(number_of_cells = n()) %>% as.data.frame()
# data %>% group_by(orig.ident) %>%
#   summarise(median_nCount_RNA = median(nCount_RNA))
stat3 <- data %>% group_by(orig.ident) %>%
summarise(median_genes_per_cell = median(nFeature_RNA)) %>% as.data.frame()
df1 <- merge(x = stat2, y = stat3, by = "orig.ident", all.x = TRUE)
df2 <- merge(x = df1, y = stat1, by = "orig.ident", all.x = TRUE)
head(df2)
stat4 <- data %>% group_by(orig.ident) %>%
summarise(median_mito_percent = median(percent.mt)) %>% as.data.frame()
df1 <- merge(x = stat2, y = c(stat3, stat2, stat4), by = "orig.ident", all.x = TRUE)
df1
df1 <- merge(x = stat2, y = stat3, by = "orig.ident", all.x = TRUE)
df2 <- merge(x = df1, y = stat4, by = "orig.ident", all.x = TRUE)
df3 <- merge(x = df2, y = stat1, by = "orig.ident", all.x = TRUE)
head(df2)
head(df3
)
write.csv(df3, "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4//merge_1_stats.csv")
write.csv(df3, "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/merge_1_stats.csv", row.names = F)
suppressMessages(library(tidyverse))
suppressMessages(library(magrittr))
suppressMessages(library(ggplot2))
suppressMessages(library(RColorBrewer))
args <- commandArgs( trailingOnly = TRUE )
sample_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/BA-8_374_NormL_rna_final_metadata.csv"
data <- read.csv(sample_path)
col2 <- colorRampPalette(brewer.pal(9,"Paired"))
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = count / sum(count)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat2 <- data %>% group_by(orig.ident) %>%
summarise(number_of_cells = n()) %>% as.data.frame()
stat3 <- data %>% group_by(orig.ident) %>%
summarise(median_genes_per_cell = median(nFeature_RNA)) %>% as.data.frame()
stat4 <- data %>% group_by(orig.ident) %>%
summarise(median_mito_percent = median(percent.mt)) %>% as.data.frame()
df1 <- merge(x = stat2, y = stat3, by = "orig.ident", all.x = TRUE)
df2 <- merge(x = df1, y = stat4, by = "orig.ident", all.x = TRUE)
df3 <- merge(x = df2, y = stat1, by = "orig.ident", all.x = TRUE)
head(df3)
sample_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/BA-8_374_NormL_rna_final_metadata.csv"
data <- read.csv(sample_path)
sample_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_final_metadata.csv"
data <- read.csv(sample_path)
col2 <- colorRampPalette(brewer.pal(9,"Paired"))
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = count / sum(count)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat2 <- data %>% group_by(orig.ident) %>%
summarise(number_of_cells = n()) %>% as.data.frame()
stat3 <- data %>% group_by(orig.ident) %>%
summarise(median_genes_per_cell = median(nFeature_RNA)) %>% as.data.frame()
stat4 <- data %>% group_by(orig.ident) %>%
summarise(median_mito_percent = median(percent.mt)) %>% as.data.frame()
df1 <- merge(x = stat2, y = stat3, by = "orig.ident", all.x = TRUE)
df2 <- merge(x = df1, y = stat4, by = "orig.ident", all.x = TRUE)
df3 <- merge(x = df2, y = stat1, by = "orig.ident", all.x = TRUE)
head(df3)
# write.csv(df3, "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/merge_1_stats.csv", row.names = F)
write.csv(df3, df_stat, row.names = F)
suppressMessages(library(tidyverse))
suppressMessages(library(magrittr))
suppressMessages(library(ggplot2))
suppressMessages(library(RColorBrewer))
sample_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_final_metadata.csv"
data <- read.csv(sample_path)
col2 <- colorRampPalette(brewer.pal(9,"Paired"))
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = count / sum(count)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat2 <- data %>% group_by(orig.ident) %>%
summarise(number_of_cells = n()) %>% as.data.frame()
stat3 <- data %>% group_by(orig.ident) %>%
summarise(median_genes_per_cell = median(nFeature_RNA)) %>% as.data.frame()
stat4 <- data %>% group_by(orig.ident) %>%
summarise(median_mito_percent = median(percent.mt)) %>% as.data.frame()
df1 <- merge(x = stat2, y = stat3, by = "orig.ident", all.x = TRUE)
df2 <- merge(x = df1, y = stat4, by = "orig.ident", all.x = TRUE)
df3 <- merge(x = df2, y = stat1, by = "orig.ident", all.x = TRUE)
head(df3)
write.csv(df3, "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_stats.csv", row.names = F)
data %>% group_by(orig.ident) %>%
summarise(median_mito_percent = sum(nCount_RNA)) %>% as.data.frame()
data %>% group_by(orig.ident) %>%
summarise(total_UMI = sum(nCount_RNA)) %>% as.data.frame()
stat0 <- data %>% group_by(orig.ident) %>%
summarise(total_UMI = sum(nCount_RNA)) %>% as.data.frame()
col2 <- colorRampPalette(brewer.pal(9,"Paired"))
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = count / sum(count)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat0 <- data %>% group_by(orig.ident) %>%
summarise(total_UMI = sum(nCount_RNA)) %>% as.data.frame()
stat2 <- data %>% group_by(orig.ident) %>%
summarise(number_of_cells = n()) %>% as.data.frame()
stat3 <- data %>% group_by(orig.ident) %>%
summarise(median_genes_per_cell = median(nFeature_RNA)) %>% as.data.frame()
stat4 <- data %>% group_by(orig.ident) %>%
summarise(median_mito_percent = median(percent.mt)) %>% as.data.frame()
df0 <- merge(x = stat0, y = stat2, by = "orig.ident", all.x = TRUE)
df1 <- merge(x = df0, y = stat3, by = "orig.ident", all.x = TRUE)
df2 <- merge(x = df1, y = stat4, by = "orig.ident", all.x = TRUE)
df3 <- merge(x = df2, y = stat1, by = "orig.ident", all.x = TRUE)
head(df3)
stat1
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = round(count / sum(count)),2) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat1
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = round(count / sum(count)),4) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat1
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = round(count / sum(count)),digits = -4) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat1
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = round(count / sum(count)),digits = 4) %>% as.data.frame()
stat1
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = round( (count / sum(count)),digits = 4)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat1
col2 <- colorRampPalette(brewer.pal(9,"Paired"))
stat1 <- data %>% group_by(orig.ident, assign.ident.breast) %>%
summarise(count = n()) %>% mutate(freq = round( (count / sum(count)),digits = 4)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~assign.ident.breast, value = "freq") %>% as.data.frame()
stat0 <- data %>% group_by(orig.ident) %>%
summarise(total_UMI = sum(nCount_RNA)) %>% as.data.frame()
stat2 <- data %>% group_by(orig.ident) %>%
summarise(number_of_cells = n()) %>% as.data.frame()
stat3 <- data %>% group_by(orig.ident) %>%
summarise(median_genes_per_cell = median(nFeature_RNA)) %>% as.data.frame()
stat4 <- data %>% group_by(orig.ident) %>%
summarise(median_mito_percent = median(percent.mt)) %>% as.data.frame()
df0 <- merge(x = stat0, y = stat2, by = "orig.ident", all.x = TRUE)
df1 <- merge(x = df0, y = stat3, by = "orig.ident", all.x = TRUE)
df2 <- merge(x = df1, y = stat4, by = "orig.ident", all.x = TRUE)
df3 <- merge(x = df2, y = stat1, by = "orig.ident", all.x = TRUE)
head(df3)
# sample_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_final_metadata.csv"
data <- read.csv("/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_stats.csv")
data
# sample_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_final_metadata.csv"
data <- read.csv("/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_stats.csv", check.names = F)
data
data2 <- read.csv("/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_stats.csv", check.names = F)
rbind(data, data2)
df_final = as.data.frame()
df_final = ""
inputFiles <- c("/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_stats.csv",
"/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_stats.csv")
df_final = ""
for(file in inputFiles){
df <- read.csv(file, check.names = F)
df_final <- rbind(df_final, df)
}
print(df_final)
inputFiles <- c("/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_stats.csv",
"/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/BA-8_374_NormL_rna_stats.csv")
df_final = data.frame()
for(file in inputFiles){
df <- read.csv(file, check.names = F)
df_final <- rbind(df_final, df)
}
print(df_final)
suppressMessages(library(tidyverse))
suppressMessages(library(magrittr))
suppressMessages(library(ggplot2))
suppressMessages(library(RColorBrewer))
sample_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/M2_atac_final_metadata.csv"
# sample_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/M2_atac_final_metadata.csv"
data <- read.csv(sample_path)
data
stat1 <- data %>% group_by(dataset, cluster_annotation) %>%
summarise(count = n()) %>% mutate(freq = round( (count / sum(count)),digits = 3)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, orig.ident~cluster_annotation, value = "freq") %>% as.data.frame()
stat1 <- data %>% group_by(dataset, cluster_annotation) %>%
summarise(count = n()) %>% mutate(freq = round( (count / sum(count)),digits = 3)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, dataset~cluster_annotation, value = "freq") %>% as.data.frame()
stat1
stat1 <- data %>% group_by(dataset, cluster_annotation) %>%
summarise(count = n()) %>% mutate(freq = round( (count / sum(count)),digits = 3)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, dataset~cluster_annotation, value = "freq") %>% as.data.frame()
stat0 <- data %>% group_by(dataset) %>%
summarise(total_UMI = sum(nCount_peaks)) %>% as.data.frame()
stat2 <- data %>% group_by(dataset) %>%
summarise(number_of_cells = n()) %>% as.data.frame()
stat3 <- data %>% group_by(dataset) %>%
summarise(median_peaks_per_cell = median(nFeature_peaks)) %>% as.data.frame()
# stat4 <- data %>% group_by(orig.ident) %>%
#   summarise(median_mito_percent = median(percent.mt)) %>% as.data.frame()
df0 <- merge(x = stat0, y = stat2, by = "orig.ident", all.x = TRUE)
df1 <- merge(x = df0, y = stat3, by = "orig.ident", all.x = TRUE)
df3 <- merge(x = df1, y = stat1, by = "orig.ident", all.x = TRUE)
head(df3)
df0 <- merge(x = stat0, y = stat2, by = "dataset", all.x = TRUE)
df1 <- merge(x = df0, y = stat3, by = "dataset", all.x = TRUE)
df3 <- merge(x = df1, y = stat1, by = "dataset", all.x = TRUE)
head(df3)
sample_path <- "/Users/jiang/Dropbox (Partners HealthCare)/Single-cell_pipeline/scpipeline/scpipe_yijia_version4/merge_1_final_metadata.csv"
data <- read.csv(sample_path)
col2 <- colorRampPalette(brewer.pal(9,"Paired"))
stat1 <- data %>% group_by(dataset, cluster_annotation) %>%
summarise(count = n()) %>% mutate(freq = round( (count / sum(count)),digits = 3)) %>% as.data.frame()
library(reshape)
stat1 <- cast(stat1, dataset~cluster_annotation, value = "freq") %>% as.data.frame()
stat1
stat0 <- data %>% group_by(dataset) %>%
summarise(total_molecules = sum(nCount_peaks)) %>% as.data.frame()
stat2 <- data %>% group_by(dataset) %>%
summarise(number_of_cells = n()) %>% as.data.frame()
stat3 <- data %>% group_by(dataset) %>%
summarise(median_peaks_per_cell = median(nFeature_peaks)) %>% as.data.frame()
# stat4 <- d
df0 <- merge(x = stat0, y = stat2, by = "dataset", all.x = TRUE)
df1 <- merge(x = df0, y = stat3, by = "dataset", all.x = TRUE)
df3 <- merge(x = df1, y = stat1, by = "dataset", all.x = TRUE)
head(df3)
